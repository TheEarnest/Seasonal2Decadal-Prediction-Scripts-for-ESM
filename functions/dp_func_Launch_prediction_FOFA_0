#! /bin/bash
# 2015/01/21 by Mao-Lin Shen
${DebugSetting}
JobStartTime=`date`
JobName='dp_func_Launch_prediction_FOFA_0'
echo ${LinnBreaker}
echo ${LinnBreaker}
echo "Starting "${JobName}" ...... "

tempPrefix=t_'dp_func_Launch_prediction_FOFA_0'
###############################################################################

#########################################################################
# double check if the jobs are all ready     
# some should be skip if the job is finished!!!!.......
#------------------------------------------------------------------------
dd=`echo 00${M_dd} | tail -c3 `
mm=${M_mm}; yr=${M_yr}
NewDate=${yr}-${mm}-${dd}
for im in ${Prediction_ensembles}; do
  is_PredictionStart=1
  mem=`echo 00${im} | tail -3c`
  CStatus=`grep "${prefix_mem}_${mem}" ${Prediction_sys_log} | grep ${prefix_Pyear}_${yr} | grep "${prefix_Prun}_" ` || CStatus="None"
  if [ "${CStatus}" == "None" ] ; then
    mem=`echo 00${im} | tail -3c`
    # Double check the job status ...
    echo "${prefix_mem}_${mem} ${prefix_Pyear}_${yr} ${prefix_DAocean}_Done ${prefix_CAMnudging}_Done " >> ${Prediction_sys_log}
    # for free forecast 
    sourceDIR=${rest_path}/${REST_CaseName}${mem}/rest/${NewDate}-00000
    targetDIR1=${rest_path}/${REST_CaseName}${mem}/rest
    targetFile2=${ConversionDIR}/${REST_CaseName}${mem}/rest/${NewDate}-00000.tar.gz
    fileN=${REST_CaseName}${mem}.clm2.rh0.${NewDate}-00000.nc
    if [ -d ${targetDIR1}/${NewDate}-00000 ]; then
      fileCheck=`diff ${sourceDIR}/${fileN} ${targetDIR1}/${NewDate}-00000/${fileN} | awk -F " " '{print $1}'`
      if [ "${fileCheck}" == "" ]; then
        echo "Files dupplicated for member "${mem}" ...  " 
      else
        cp -rf ${sourceDIR} ${targetDIR1} 
        echo "Files dupplicated for member "${mem}" ...  " 
      fi
    elif [ -f ${targetFile2} ]; then
      tar xvf ${targetFile2} -C ${targetDIR1} 
    else
      cp -rf ${sourceDIR} ${targetDIR1}
      echo "Files dupplicated for member "${mem}" ...  " 
    fi
  fi
done

export Nyr=`echo ${NewDate} | cut -c1-4 `
export Nmm=`echo ${NewDate} | cut -c6-7 `
export Ndd=`echo ${NewDate} | tail -c3 `

#if [ "${Nmm}" == "${mm}" ]; then
#  Tmm=`echo "(${Nmm}-1)" | bc -l` 
#else
  Tmm=${Nmm}
#fi

# get pid of dp_func_monitor_nc4convert
nc4convert_pid=`ps | grep dp_func_monit | awk -F " " '{print $1}' `
if [ "${nc4convert_pid}" == "" ]; then
  cd ${funcPath}
#  ./dp_func_monitor_nc4convert    &
  cd ..
fi

set -e
#########################################################################
# check if re-creat cases is necessary      
# change to check for each case instead, 05/05/15 MS
#------------------------------------------------------------------------
temp_dateS=`date`
normalExecutable=`readlink -f ${WORKDIR}/../${Normal_Exec_templet_CaseName}/${Normal_Exec_templet_CaseName}.ccsm.exe `  || normalExecutable="None"
if [ ! -f ${normalExecutable} ]; then
  . ${funcPath}/dp_func_create_template_NormalCase.sh
fi

firstmem=`echo ${Prediction_ensembles} | awk -F " " '{print $1}' `
firstmem=`echo 000${firstmem} | tail -c3 `
for mem in ${Prediction_ensembles} ; do
  mem=`echo ${mem} | tail -c3 | bc -l`
  mem=`echo 00${mem} | tail -c3 ` # re-format
  CStatus=`grep "${prefix_mem}_${mem}" ${Prediction_sys_log} | grep ${prefix_Pyear}_${yr} | grep "${prefix_Prun}_"` || CStatus="None"
  Code4Nudging=`grep met_data_file ${caseDIR}/${Pred_CasePrefix}_mem01/Buildconf/cam.buildnml.csh | cut -c1-9 ` || Code4Nudging="None"

  if [ "${CStatus}" == "None" ] && [ "${Code4Nudging}" != "None"  ]; then
    . ${funcPath}/dp_func_prepare_normal_cases
  fi
done # do for all the ensemble members

####################################################################### 
# Submit the jobs
#--------------------------------------------------------------------
# check the prediction start date..............

for mem in ${Prediction_ensembles} ; do
  mem=`echo ${mem} | tail -c3 | bc -l`
  mem=`echo 00${mem} | tail -c3 ` # re-format
  CStatusD=`grep "${prefix_mem}_${mem}" ${Prediction_sys_log} | grep ${prefix_Pyear}_${yr} | grep "${prefix_Prun}_D"` || CStatusD="None"
  if [ "${CStatusD}" == "None" ] ; then
    is_job_submitted=0
    while (( ! ${is_job_submitted} )); do
      cd ${caseDIR}/${Pred_CasePrefix}_mem${mem}
      if [ -f ${Pred_CasePrefix}_mem${mem}.${machine}.submit ] ; then
        ./${Pred_CasePrefix}_mem${mem}.${machine}.submit
        is_job_submitted=1
      else
        sleep 5
      fi
      sleep 0.5s
    done
    JobStatus=`grep "${prefix_mem}_${mem}" ${Prediction_sys_log} | grep ${prefix_Pyear}_${yr} `
    JobNewStatus=${JobStatus}" "${prefix_Prun}"_S"
    sed -i s/"${JobStatus}"/"${JobNewStatus}"/g ${Prediction_sys_log}
    sleep 5s
  fi
done


###############################################################################
echo ${JobStartTime}
echo `date`" || "${JobName}
echo ${LinnBreaker}



